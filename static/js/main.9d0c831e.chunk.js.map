{"version":3,"sources":["components/DrumPad.jsx","sounds/sounds.js","components/PadBunk.jsx","components/SetupButtons.jsx","App.js","index.js"],"names":["DrumPad","props","audio","useRef","value","useContext","UserContext","document","addEventListener","e","key","toLowerCase","playSound","setPlayed","id","current","volume","play","onClick","className","ref","src","sound","sounds","PadBunk","SetupButtons","onChange","setVolume","target","console","log","type","min","max","htmlFor","class","played","createContext","App","useState","Provider","ReactDOM","render","StrictMode","getElementById"],"mappings":"mLAIe,SAASA,EAAQC,GAC5B,IAAMC,EAAQC,iBAAO,MAEfC,EAAQC,qBAAWC,GAEzBC,SAASC,iBAAiB,WAAW,SAACC,GAClC,IACOA,EAAEC,IAAIC,gBAAkBV,EAAMG,MAAMO,eACnCC,IAGR,SACI,WAIR,IAAMA,EAAY,WACdR,EAAMS,UAAUZ,EAAMa,IACtBZ,EAAMa,QAAQC,OAASZ,EAAMY,OAAO,IACpCd,EAAMa,QAAQE,QAGlB,OAEI,sBAAKC,QAAS,WAAMN,KAAcO,UAAU,WAAWL,GAAIb,EAAMa,GAAjE,UACKb,EAAMG,MACP,uBAAOgB,IAAKlB,EAAQiB,UAAU,OAAOL,GAAIb,EAAMG,MAAOiB,IAAKpB,EAAMqB,WC9BtE,IAAMC,EAKH,2DALGA,EAMF,yDANEA,EAOH,6DAPGA,EAQH,6DARGA,EASI,yDATJA,EAaF,kEAbEA,EAcE,0DAdFA,EAiBA,+DAjBAA,EAkBF,0DChBI,SAASC,EAAQvB,GAG5B,OACI,sBAAKkB,UAAU,WAAf,UACI,cAACnB,EAAD,CAASsB,MAASC,EAAcnB,MAAM,IAAIU,GAAG,WAC7C,cAACd,EAAD,CAASsB,MAASC,EAAcnB,MAAM,IAAIU,GAAG,UAC7C,cAACd,EAAD,CAASsB,MAASC,EAAcnB,MAAM,IAAIU,GAAG,UAC7C,cAACd,EAAD,CAASsB,MAASC,EAAanB,MAAM,IAAIU,GAAG,SAC5C,cAACd,EAAD,CAASsB,MAASC,EAAanB,MAAM,IAAIU,GAAG,SAC5C,cAACd,EAAD,CAASsB,MAASC,EAAgBnB,MAAM,IAAIU,GAAG,aAC/C,cAACd,EAAD,CAASsB,MAASC,EAAoBnB,MAAM,IAAIU,GAAG,gBACnD,cAACd,EAAD,CAASsB,MAASC,EAAkBnB,MAAM,IAAIU,GAAG,cACjD,cAACd,EAAD,CAASsB,MAASC,EAAanB,MAAM,IAAIU,GAAG,aCXzC,SAASW,EAAaxB,GAEjC,IAAMG,EAAQC,qBAAWC,GAkBzB,OACG,sBAAKa,UAAU,QAAf,UACI,uBAAOA,UAAU,cAAcO,SAlBjB,SAACjB,GAClBR,EAAM0B,UAAUlB,EAAEmB,OAAOxB,OACzByB,QAAQC,IAAI7B,EAAMe,SAgBwCe,KAAK,QAAQC,IAAI,IAAIC,IAAI,QAChF,uBAAOC,QAAQ,QAAf,SAdA9B,EAAMY,OAAS,GACV,mBAAGmB,MAAM,qBAEb/B,EAAMY,OAAS,EACR,mBAAGmB,MAAM,uBAEjB/B,EAAMY,OAAS,EACP,mBAAGmB,MAAM,4BADpB,IASG,qBAAKrB,GAAG,UAAR,SAAmBb,EAAMmC,YCxB7B,IAAM9B,EAAc+B,0BAoBZC,MAlBf,WAEE,MAA6BC,mBAAS,MAAtC,mBAAQH,EAAR,KAAgBvB,EAAhB,KACA,EAA6B0B,mBAAS,IAAtC,mBAAQvB,EAAR,KAAgBW,EAAhB,KAEA,OACE,cAACrB,EAAYkC,SAAb,CAAsBpC,MAAO,CAACS,UAAWA,EAAWG,OAAQA,GAA5D,SACE,gCACE,oBAAIG,UAAU,SAAd,0BACA,sBAAKL,GAAG,eAAR,UACE,cAACU,EAAD,IACA,cAACC,EAAD,CAAcE,UAAWA,EAAWS,OAAQA,EAAQpB,OAAQA,aCXtEyB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpC,SAASqC,eAAe,U","file":"static/js/main.9d0c831e.chunk.js","sourcesContent":["import { useRef, useContext } from \"react\";\r\nimport React from \"react\";\r\nimport { UserContext } from \"../App\";\r\n\r\nexport default function DrumPad(props){\r\n    const audio = useRef(null)\r\n\r\n    const value = useContext(UserContext); \r\n\r\n    document.addEventListener(\"keydown\", (e)=>{\r\n        try{\r\n            if(e.key.toLowerCase() === props.value.toLowerCase()){;\r\n                playSound()\r\n            }\r\n        }\r\n        catch{\r\n            return\r\n        }\r\n    } )\r\n\r\n    const playSound = () =>{\r\n        value.setPlayed(props.id)\r\n        audio.current.volume = value.volume/100\r\n        audio.current.play()\r\n    }\r\n\r\n    return(\r\n\r\n        <div onClick={()=>{ playSound()}} className=\"drum-pad\" id={props.id}>\r\n            {props.value}\r\n            <audio ref={audio}  className=\"clip\" id={props.value} src={props.sound}></audio>\r\n        </div>\r\n    )\r\n}","export const sounds = {\r\n    heater1: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3\",\r\n    heater2: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3\",\r\n    heater3: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3\",\r\n    heater4: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3\",\r\n    clap: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3\",\r\n    hiHat: \"https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3\",\r\n    bass: \"https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3\",\r\n    beat: \"https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3\",\r\n    closedHiHat: \"https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3\",\r\n    chord1: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3\",\r\n    chord2: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3\",\r\n    chord3: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3\",\r\n    grind: \"https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3\",\r\n    openHiHat: \"https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3\",\r\n    closedHiHat2: \"https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3\",\r\n    bass2: \"https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3\",\r\n    rimshot: \"https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3\",\r\n    snare: \"https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3\",\r\n}\r\n\r\n    ","import DrumPad from \"./DrumPad\";\r\nimport { sounds } from \"../sounds/sounds\";\r\nexport default function PadBunk(props){\r\n\r\n\r\n    return(\r\n        <div className=\"pad-Bank\">\r\n            <DrumPad sound = {sounds.hiHat} value=\"Q\" id=\"Hi-Hat\"/>\r\n            <DrumPad sound = {sounds.snare} value=\"W\" id=\"Snare\" />\r\n            <DrumPad sound = {sounds.grind} value=\"E\" id=\"grind\" />\r\n            <DrumPad sound = {sounds.clap} value=\"A\" id=\"Clap\" />\r\n            <DrumPad sound = {sounds.bass} value=\"S\" id=\"Bass\" />\r\n            <DrumPad sound = {sounds.rimshot} value=\"D\" id=\"Rim-Shot\" />\r\n            <DrumPad sound = {sounds.closedHiHat} value=\"Z\" id=\"ClosedHiHat\" />\r\n            <DrumPad sound = {sounds.openHiHat} value=\"X\" id=\"openHiHat\" />\r\n            <DrumPad sound = {sounds.beat} value=\"C\" id=\"Floor\" />\r\n        </div>\r\n    )\r\n}","import { useContext } from \"react\";\r\nimport { UserContext } from \"../App\";\r\n\r\n\r\nexport default function SetupButtons(props){\r\n    \r\n    const value = useContext(UserContext)\r\n\r\n    const changeVolume = (e) =>{\r\n        props.setVolume(e.target.value)\r\n        console.log(props.volume);\r\n    }\r\n    const icon = () =>{\r\n        if(value.volume > 50){\r\n         return <i class=\"fas fa-volume-up\"></i>\r\n        }\r\n        if( value.volume > 0){\r\n            return <i class=\"fas fa-volume-down\"></i>\r\n        }\r\n        if(value.volume < 1){\r\n            return <i class=\"fas fa-volume-mute\"></i>\r\n        }\r\n    }\r\n\r\n    return(\r\n       <div className=\"setUp\">\r\n           <input className=\"volumeInput\" onChange={changeVolume} type=\"range\" min=\"0\" max=\"100\" />\r\n           <label htmlFor=\"input\">{icon()}</label>\r\n           <div id=\"display\">{props.played}</div>\r\n       </div>\r\n    )\r\n}","import { useState, createContext } from 'react';\nimport PadBunk from './components/PadBunk';\nimport SetupButtons from './components/SetupButtons';\n\nexport const UserContext = createContext()\n\nfunction App() {\n\n  const [ played, setPlayed] = useState(null)\n  const [ volume, setVolume] = useState(50)\n\n  return (\n    <UserContext.Provider value={{setPlayed: setPlayed, volume: volume }}>\n      <div>\n        <h1 className=\"header\">Drum-Machine</h1>\n        <div id=\"drum-machine\">\n          <PadBunk />\n          <SetupButtons setVolume={setVolume} played={played} volume={volume}/>\n        </div>\n      </div>\n    </UserContext.Provider>\n     );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}